[string,		Keyword]
[GetTokenName,		Identifier]
[(,		Deliminator]
[TokenType,		Identifier]
[tokenType,		Identifier]
[),		Deliminator]
[{,		Deliminator]
[switch,		Identifier]
[(,		Deliminator]
[tokenType,		Identifier]
[),		Deliminator]
[{,		Deliminator]
[case,		Identifier]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[:,		Deliminator]
[return,		Keyword]
["Keyword",		Literal]
[;,		Deliminator]
[case,		Identifier]
[TokenType,		Identifier]
[::,		Operator]
[IDENTIFIER,		Identifier]
[:,		Deliminator]
[return,		Keyword]
["Identifier",		Literal]
[;,		Deliminator]
[case,		Identifier]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[:,		Deliminator]
[return,		Keyword]
["Operator",		Literal]
[;,		Deliminator]
[case,		Identifier]
[TokenType,		Identifier]
[::,		Operator]
[DELIMITER,		Identifier]
[:,		Deliminator]
[return,		Keyword]
["Deliminator",		Literal]
[;,		Deliminator]
[case,		Identifier]
[TokenType,		Identifier]
[::,		Operator]
[LITERAL,		Identifier]
[:,		Deliminator]
[return,		Keyword]
["Literal",		Literal]
[;,		Deliminator]
[},		Deliminator]
[return,		Keyword]
["Unknown",		Literal]
[;,		Deliminator]
[},		Deliminator]
[map,		Keyword]
[<,		Operator]
[std,		Identifier]
[::,		Operator]
[string,		Keyword]
[,,		Deliminator]
[TokenType,		Identifier]
[>,		Operator]
[tokensMap,		Identifier]
[=,		Operator]
[{,		Deliminator]
[{,		Deliminator]
["if",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["for",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["while",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["const",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["int",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["string",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["char",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["struct",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["bool",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["return",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["regex",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["using",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["namespace",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["auto",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["break",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["else",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["map",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["smatch",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[KEYWORDS,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["true",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[LITERAL,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["false",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[LITERAL,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["(",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[DELIMITER,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
[")",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[DELIMITER,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["[",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[DELIMITER,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["]",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[DELIMITER,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["{",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[DELIMITER,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["}",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[DELIMITER,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
[",",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[DELIMITER,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
[";",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[DELIMITER,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
[":",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[DELIMITER,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
[".",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["=",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["+",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["-",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["*",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["/",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["%",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["!",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
[":",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["::",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["++",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["--",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["+=",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["-=",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["==",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["!=",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["<",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
[">",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
[">=",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["<=",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["<<",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
[">>",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["&",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["|",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["&&",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[{,		Deliminator]
["||",		Literal]
[,,		Deliminator]
[TokenType,		Identifier]
[::,		Operator]
[OPERATOR,		Identifier]
[},		Deliminator]
[,,		Deliminator]
[},		Deliminator]
[;,		Deliminator]
[bool,		Keyword]
[IsWhiteSpace,		Identifier]
[(,		Deliminator]
[string,		Keyword]
[c,		Identifier]
[),		Deliminator]
[{,		Deliminator]
[return,		Keyword]
[(,		Deliminator]
[c,		Identifier]
[==,		Operator]
[" ",		Literal]
[),		Deliminator]
[||,		Operator]
[(,		Deliminator]
[c,		Identifier]
[==,		Operator]
["\t",		Literal]
[),		Deliminator]
[||,		Operator]
[(,		Deliminator]
[c,		Identifier]
[==,		Operator]
["\f",		Literal]
[),		Deliminator]
[||,		Operator]
[(,		Deliminator]
[c,		Identifier]
[==,		Operator]
["\v",		Literal]
[),		Deliminator]
[;,		Deliminator]
[},		Deliminator]
[bool,		Keyword]
[IsEndOfLine,		Identifier]
[(,		Deliminator]
[string,		Keyword]
[c,		Identifier]
[),		Deliminator]
[{,		Deliminator]
[return,		Keyword]
[(,		Deliminator]
[c,		Identifier]
[==,		Operator]
["\n",		Literal]
[),		Deliminator]
[||,		Operator]
[(,		Deliminator]
[c,		Identifier]
[==,		Operator]
["\r",		Literal]
[),		Deliminator]
[;,		Deliminator]
[;,		Deliminator]
[},		Deliminator]
[bool,		Keyword]
[IsNumeric,		Identifier]
[(,		Deliminator]
[string,		Keyword]
[s,		Identifier]
[),		Deliminator]
[{,		Deliminator]
[return,		Keyword]
[(,		Deliminator]
[s,		Identifier]
[>=,		Operator]
["0",		Literal]
[),		Deliminator]
[&&,		Operator]
[(,		Deliminator]
[s,		Identifier]
[<=,		Operator]
["9",		Literal]
[),		Deliminator]
[;,		Deliminator]
[},		Deliminator]
[struct,		Keyword]
[Token,		Identifier]
[{,		Deliminator]
[string,		Keyword]
[token,		Identifier]
[;,		Deliminator]
[TokenType,		Identifier]
[type,		Identifier]
[;,		Deliminator]
[},		Deliminator]
[;,		Deliminator]
[struct,		Keyword]
[Tokenizer,		Identifier]
[{,		Deliminator]
[string,		Keyword]
[input,		Identifier]
[;,		Deliminator]
[size_t,		Identifier]
[currentIndex,		Identifier]
[=,		Operator]
[0,		Literal]
[;,		Deliminator]
[string,		Keyword]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[{,		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[currentIndex,		Identifier]
[>=,		Operator]
[input,		Identifier]
[.,		Operator]
[size,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[-,		Operator]
[1,		Literal]
[),		Deliminator]
[return,		Keyword]
["",		Literal]
[;,		Deliminator]
[return,		Keyword]
[string,		Keyword]
[(,		Deliminator]
[1,		Literal]
[,,		Deliminator]
[input,		Identifier]
[[,		Deliminator]
[currentIndex,		Identifier]
[],		Deliminator]
[),		Deliminator]
[;,		Deliminator]
[},		Deliminator]
[;,		Deliminator]
[string,		Keyword]
[getTwoCurrentSymbols,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[{,		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[currentIndex,		Identifier]
[>=,		Operator]
[input,		Identifier]
[.,		Operator]
[size,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[-,		Operator]
[2,		Literal]
[),		Deliminator]
[return,		Keyword]
["",		Literal]
[;,		Deliminator]
[return,		Keyword]
[string,		Keyword]
[(,		Deliminator]
[1,		Literal]
[,,		Deliminator]
[input,		Identifier]
[[,		Deliminator]
[currentIndex,		Identifier]
[],		Deliminator]
[),		Deliminator]
[+,		Operator]
[string,		Keyword]
[(,		Deliminator]
[1,		Literal]
[,,		Deliminator]
[input,		Identifier]
[[,		Deliminator]
[currentIndex,		Identifier]
[+,		Operator]
[1,		Literal]
[],		Deliminator]
[),		Deliminator]
[;,		Deliminator]
[},		Deliminator]
[;,		Deliminator]
[},		Deliminator]
[;,		Deliminator]
[void,		Identifier]
[SkipWhiteSpacesAndComments,		Identifier]
[(,		Deliminator]
[Tokenizer,		Identifier]
[&,		Operator]
[tokenizer,		Identifier]
[),		Deliminator]
[{,		Deliminator]
[while,		Keyword]
[(,		Deliminator]
[IsWhiteSpace,		Identifier]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[),		Deliminator]
[||,		Operator]
[IsEndOfLine,		Identifier]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[),		Deliminator]
[),		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[++,		Operator]
[;,		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getTwoCurrentSymbols,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[==,		Operator]
["//",		Literal]
[),		Deliminator]
[{,		Deliminator]
[while,		Keyword]
[(,		Deliminator]
[!,		Operator]
[IsEndOfLine,		Identifier]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[),		Deliminator]
[),		Deliminator]
[{,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[++,		Operator]
[;,		Deliminator]
[},		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[++,		Operator]
[;,		Deliminator]
[},		Deliminator]
[else,		Keyword]
[if,		Keyword]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getTwoCurrentSymbols,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[==,		Operator]
["/*",		Literal]
[),		Deliminator]
[{,		Deliminator]
[while,		Keyword]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getTwoCurrentSymbols,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[==,		Operator]
["*/",		Literal]
[),		Deliminator]
[{,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[++,		Operator]
[;,		Deliminator]
[},		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[+=,		Operator]
[2,		Literal]
[;,		Deliminator]
[},		Deliminator]
[},		Deliminator]
[bool,		Keyword]
[MatchKeyword,		Identifier]
[(,		Deliminator]
[Tokenizer,		Identifier]
[&,		Operator]
[tokenizer,		Identifier]
[,,		Deliminator]
[Token,		Identifier]
[&,		Operator]
[token,		Identifier]
[),		Deliminator]
[{,		Deliminator]
[smatch,		Keyword]
[match,		Identifier]
[;,		Deliminator]
[auto,		Keyword]
[endIndex,		Identifier]
[=,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[input,		Identifier]
[.,		Operator]
[find,		Identifier]
[(,		Deliminator]
["\n",		Literal]
[,,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[),		Deliminator]
[;,		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[regex,		Keyword]
[_search,		Identifier]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[input,		Identifier]
[.,		Operator]
[cbegin,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[+,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[,,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[input,		Identifier]
[.,		Operator]
[cbegin,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[+,		Operator]
[endIndex,		Identifier]
[,,		Deliminator]
[match,		Identifier]
[,,		Deliminator]
[keywordsRegex,		Identifier]
[),		Deliminator]
[),		Deliminator]
[{,		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[match,		Identifier]
[.,		Operator]
[prefix,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[.,		Operator]
[str,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[.,		Operator]
[size,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[!=,		Operator]
[0,		Literal]
[),		Deliminator]
[return,		Keyword]
[false,		Literal]
[;,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[=,		Operator]
[match,		Identifier]
[[,		Deliminator]
[0,		Literal]
[],		Deliminator]
[.,		Operator]
[str,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[;,		Deliminator]
[token,		Identifier]
[.,		Operator]
[type,		Identifier]
[=,		Operator]
[tokensMap,		Identifier]
[[,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[],		Deliminator]
[;,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[+=,		Operator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[.,		Operator]
[size,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[;,		Deliminator]
[return,		Keyword]
[true,		Literal]
[;,		Deliminator]
[},		Deliminator]
[return,		Keyword]
[false,		Literal]
[;,		Deliminator]
[},		Deliminator]
[bool,		Keyword]
[MatchIdentifier,		Identifier]
[(,		Deliminator]
[Tokenizer,		Identifier]
[&,		Operator]
[tokenizer,		Identifier]
[,,		Deliminator]
[Token,		Identifier]
[&,		Operator]
[token,		Identifier]
[),		Deliminator]
[{,		Deliminator]
[smatch,		Keyword]
[match,		Identifier]
[;,		Deliminator]
[auto,		Keyword]
[endIndex,		Identifier]
[=,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[input,		Identifier]
[.,		Operator]
[find,		Identifier]
[(,		Deliminator]
["\n",		Literal]
[,,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[),		Deliminator]
[;,		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[regex,		Keyword]
[_search,		Identifier]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[input,		Identifier]
[.,		Operator]
[cbegin,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[+,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[,,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[input,		Identifier]
[.,		Operator]
[cbegin,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[+,		Operator]
[endIndex,		Identifier]
[,,		Deliminator]
[match,		Identifier]
[,,		Deliminator]
[identifierKeywordRegex,		Identifier]
[),		Deliminator]
[),		Deliminator]
[{,		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[match,		Identifier]
[.,		Operator]
[prefix,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[.,		Operator]
[str,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[.,		Operator]
[size,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[!=,		Operator]
[0,		Literal]
[),		Deliminator]
[return,		Keyword]
[false,		Literal]
[;,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[=,		Operator]
[match,		Identifier]
[[,		Deliminator]
[0,		Literal]
[],		Deliminator]
[.,		Operator]
[str,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[;,		Deliminator]
[token,		Identifier]
[.,		Operator]
[type,		Identifier]
[=,		Operator]
[TokenType,		Identifier]
[::,		Operator]
[IDENTIFIER,		Identifier]
[;,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[+=,		Operator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[.,		Operator]
[size,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[;,		Deliminator]
[return,		Keyword]
[true,		Literal]
[;,		Deliminator]
[},		Deliminator]
[return,		Keyword]
[false,		Literal]
[;,		Deliminator]
[},		Deliminator]
[Token,		Identifier]
[GetToken,		Identifier]
[(,		Deliminator]
[Tokenizer,		Identifier]
[&,		Operator]
[tokenizer,		Identifier]
[),		Deliminator]
[{,		Deliminator]
[Token,		Identifier]
[token,		Identifier]
[;,		Deliminator]
[SkipWhiteSpacesAndComments,		Identifier]
[(,		Deliminator]
[tokenizer,		Identifier]
[),		Deliminator]
[;,		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[tokensMap,		Identifier]
[.,		Operator]
[find,		Identifier]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getTwoCurrentSymbols,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[),		Deliminator]
[!=,		Operator]
[tokensMap,		Identifier]
[.,		Operator]
[end,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[),		Deliminator]
[{,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[=,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[getTwoCurrentSymbols,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[;,		Deliminator]
[token,		Identifier]
[.,		Operator]
[type,		Identifier]
[=,		Operator]
[tokensMap,		Identifier]
[[,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[],		Deliminator]
[;,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[+=,		Operator]
[2,		Literal]
[;,		Deliminator]
[return,		Keyword]
[token,		Identifier]
[;,		Deliminator]
[},		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[tokensMap,		Identifier]
[.,		Operator]
[find,		Identifier]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[),		Deliminator]
[!=,		Operator]
[tokensMap,		Identifier]
[.,		Operator]
[end,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[),		Deliminator]
[{,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[=,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[;,		Deliminator]
[token,		Identifier]
[.,		Operator]
[type,		Identifier]
[=,		Operator]
[tokensMap,		Identifier]
[[,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[],		Deliminator]
[;,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[++,		Operator]
[;,		Deliminator]
[return,		Keyword]
[token,		Identifier]
[;,		Deliminator]
[},		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[MatchKeyword,		Identifier]
[(,		Deliminator]
[tokenizer,		Identifier]
[,,		Deliminator]
[token,		Identifier]
[),		Deliminator]
[),		Deliminator]
[{,		Deliminator]
[return,		Keyword]
[token,		Identifier]
[;,		Deliminator]
[},		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[==,		Operator]
["\"",		Literal]
[),		Deliminator]
[{,		Deliminator]
[token,		Identifier]
[.,		Operator]
[type,		Identifier]
[=,		Operator]
[TokenType,		Identifier]
[::,		Operator]
[LITERAL,		Identifier]
[;,		Deliminator]
[string,		Keyword]
[lastSymbol,		Identifier]
[=,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[;,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[+=,		Operator]
[lastSymbol,		Identifier]
[;,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[++,		Operator]
[;,		Deliminator]
[while,		Keyword]
[(,		Deliminator]
[lastSymbol,		Identifier]
[+,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[==,		Operator]
["\\\"",		Literal]
[||,		Operator]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[!=,		Operator]
["\"",		Literal]
[&&,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[!=,		Operator]
["",		Literal]
[),		Deliminator]
[),		Deliminator]
[{,		Deliminator]
[lastSymbol,		Identifier]
[=,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[;,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[+=,		Operator]
[lastSymbol,		Identifier]
[;,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[++,		Operator]
[;,		Deliminator]
[},		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[==,		Operator]
["",		Literal]
[),		Deliminator]
[{,		Deliminator]
[token,		Identifier]
[.,		Operator]
[type,		Identifier]
[=,		Operator]
[TokenType,		Identifier]
[::,		Operator]
[UNKNOWN,		Identifier]
[;,		Deliminator]
[},		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[++,		Operator]
[;,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[+=,		Operator]
["\"",		Literal]
[;,		Deliminator]
[return,		Keyword]
[token,		Identifier]
[;,		Deliminator]
[},		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[==,		Operator]
["'",		Literal]
[),		Deliminator]
[{,		Deliminator]
[token,		Identifier]
[.,		Operator]
[type,		Identifier]
[=,		Operator]
[TokenType,		Identifier]
[::,		Operator]
[LITERAL,		Identifier]
[;,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[+=,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[;,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[++,		Operator]
[;,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[+=,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[;,		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[==,		Operator]
["",		Literal]
[),		Deliminator]
[{,		Deliminator]
[token,		Identifier]
[.,		Operator]
[type,		Identifier]
[=,		Operator]
[TokenType,		Identifier]
[::,		Operator]
[UNKNOWN,		Identifier]
[;,		Deliminator]
[},		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[++,		Operator]
[;,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[+=,		Operator]
["'",		Literal]
[;,		Deliminator]
[return,		Keyword]
[token,		Identifier]
[;,		Deliminator]
[},		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[IsNumeric,		Identifier]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[),		Deliminator]
[),		Deliminator]
[{,		Deliminator]
[token,		Identifier]
[.,		Operator]
[type,		Identifier]
[=,		Operator]
[TokenType,		Identifier]
[::,		Operator]
[LITERAL,		Identifier]
[;,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[+=,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[;,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[++,		Operator]
[;,		Deliminator]
[while,		Keyword]
[(,		Deliminator]
[IsNumeric,		Identifier]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[),		Deliminator]
[),		Deliminator]
[{,		Deliminator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[+=,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[getOneCurrentSymbol,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[;,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[++,		Operator]
[;,		Deliminator]
[},		Deliminator]
[return,		Keyword]
[token,		Identifier]
[;,		Deliminator]
[},		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[MatchIdentifier,		Identifier]
[(,		Deliminator]
[tokenizer,		Identifier]
[,,		Deliminator]
[token,		Identifier]
[),		Deliminator]
[),		Deliminator]
[{,		Deliminator]
[return,		Keyword]
[token,		Identifier]
[;,		Deliminator]
[},		Deliminator]
[token,		Identifier]
[.,		Operator]
[type,		Identifier]
[=,		Operator]
[TokenType,		Identifier]
[::,		Operator]
[UNKNOWN,		Identifier]
[;,		Deliminator]
[return,		Keyword]
[token,		Identifier]
[;,		Deliminator]
[},		Deliminator]
[string,		Keyword]
[readFile,		Identifier]
[(,		Deliminator]
[string,		Keyword]
[inputFile,		Identifier]
[),		Deliminator]
[{,		Deliminator]
[if,		Keyword]
[stream,		Identifier]
[in,		Identifier]
[;,		Deliminator]
[in,		Identifier]
[.,		Operator]
[open,		Identifier]
[(,		Deliminator]
[inputFile,		Identifier]
[),		Deliminator]
[;,		Deliminator]
[string,		Keyword]
[line,		Identifier]
[;,		Deliminator]
[string,		Keyword]
[result,		Identifier]
[;,		Deliminator]
[while,		Keyword]
[(,		Deliminator]
[getline,		Identifier]
[(,		Deliminator]
[in,		Identifier]
[,,		Deliminator]
[line,		Identifier]
[),		Deliminator]
[),		Deliminator]
[result,		Identifier]
[+=,		Operator]
[line,		Identifier]
[+,		Operator]
['\',		Literal]
[n,		Identifier]
[';',		Literal]
[return,		Keyword]
[result,		Identifier]
[;,		Deliminator]
[},		Deliminator]
[int,		Keyword]
[main,		Identifier]
[(,		Deliminator]
[int,		Keyword]
[argc,		Identifier]
[,,		Deliminator]
[char,		Keyword]
[*,		Operator]
[argv,		Identifier]
[[,		Deliminator]
[],		Deliminator]
[),		Deliminator]
[{,		Deliminator]
[string,		Keyword]
[inputFileName,		Identifier]
[=,		Operator]
[argv,		Identifier]
[[,		Deliminator]
[1,		Literal]
[],		Deliminator]
[;,		Deliminator]
[string,		Keyword]
[input,		Identifier]
[=,		Operator]
[readFile,		Identifier]
[(,		Deliminator]
[inputFileName,		Identifier]
[),		Deliminator]
[;,		Deliminator]
[Tokenizer,		Identifier]
[tokenizer,		Identifier]
[;,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[input,		Identifier]
[=,		Operator]
[input,		Identifier]
[;,		Deliminator]
[while,		Keyword]
[(,		Deliminator]
[tokenizer,		Identifier]
[.,		Operator]
[currentIndex,		Identifier]
[<,		Operator]
[tokenizer,		Identifier]
[.,		Operator]
[input,		Identifier]
[.,		Operator]
[size,		Identifier]
[(,		Deliminator]
[),		Deliminator]
[),		Deliminator]
[{,		Deliminator]
[auto,		Keyword]
[token,		Identifier]
[=,		Operator]
[GetToken,		Identifier]
[(,		Deliminator]
[tokenizer,		Identifier]
[),		Deliminator]
[;,		Deliminator]
[cout,		Identifier]
[<<,		Operator]
["[",		Literal]
[+,		Operator]
[token,		Identifier]
[.,		Operator]
[token,		Identifier]
[+,		Operator]
[",\t\t",		Literal]
[+,		Operator]
[GetTokenName,		Identifier]
[(,		Deliminator]
[token,		Identifier]
[.,		Operator]
[type,		Identifier]
[),		Deliminator]
[+,		Operator]
["]",		Literal]
[<<,		Operator]
[endl,		Identifier]
[;,		Deliminator]
[if,		Keyword]
[(,		Deliminator]
[token,		Identifier]
[.,		Operator]
[type,		Identifier]
[==,		Operator]
[TokenType,		Identifier]
[::,		Operator]
[UNKNOWN,		Identifier]
[),		Deliminator]
[break,		Keyword]
[;,		Deliminator]
[},		Deliminator]
[},		Deliminator]
